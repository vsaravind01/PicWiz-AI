"""alter Person.centeroid typer to ARRAY[FLOAT()]

Revision ID: 86e5b74b6b91
Revises: 885af97a21c8
Create Date: 2024-09-20 08:41:03.333853

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "86e5b74b6b91"
down_revision: Union[str, None] = "885af97a21c8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = "885af97a21c8"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("personphotolink")
    op.drop_column("person", "centroid")

    op.add_column(
        "person",
        sa.Column("centroid", sa.Column(postgresql.ARRAY(sa.Float()), nullable=False)),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("person", "centroid")
    op.add_column("person", sa.Column("centroid", sa.ARRAY(sa.Float), nullable=True))

    op.create_table(
        "personphotolink",
        sa.Column("person_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("photo_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["person_id"], ["person.id"], name="personphotolink_person_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["photo_id"], ["photo.id"], name="personphotolink_photo_id_fkey"
        ),
        sa.PrimaryKeyConstraint("person_id", "photo_id", name="personphotolink_pkey"),
    )
    # ### end Alembic commands ###
